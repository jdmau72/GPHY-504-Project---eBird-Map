shiny::runApp('Demo')
library(auk)
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
getwd()
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
remotes::install_github("anthonynorth/rscodeio")
install_github("anthonynorth/rscodeio")
install(remotes)
install.packages(remotes)
install.packages("remotes")
remotes::install_github("anthonynorth/rscodeio")
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
shiny::runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
content <- as.character(tagList(
tags$h4(paste("Count: ", obs$observation_count, sep="")),
tags$h4(paste("Date: ", obs$observation_date, sep="")),
))
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
df <- (1, 2, 3, 4, 5)
df <- [1, 2, 3, 4, 5,
df <- [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
vector.1 <- c(1, 1, 3,4,9,7)
test <- filter(vector.1, x > 4)
test <- filter(vector.1, id > 4)
i <- df(vector.1)
i <- data.frame(vector.1)
test <- filter(vector.1, i > 4)
test <- subset(vector.1, i > 4)
print(vector.1[0:1])
print(vector.1[0:2])
characters <- c("A", "T", "T", "C", "G", "C")
mat <- cbind(vector.1, characters)
df <- as.data.frame(mat)
View(df)
print(subset(df, vector.1 > 4))
print(subset(df, characters == "G" or characters == "C"))
print(subset(df, characters == "G" || characters == "C"))
print(subset(df, characters = "G" || characters = "C"))
print(subset(df, characters == "G" | characters == "C"))
print(df)
View(i)
View(i)
View(df)
View(df)
print(df[1])
print(df[][1])
print(df)
print(df[1])
print(df[2])
print(df[,1])
print(df[2, 1:2)
print(df[2, 1:2]
)
print(df[2, 1:2])
print(df[2, 1:3])
print(df[1:3, 2])
print(df[1:2, 2])
print(df[1:2, x])
print(df[1:2, "characters"])
shiny::runApp('Demo')
shiny::runApp('Demo')
install(geojsonlin)
install.packages("geojsonlint")
runApp('Demo')
runApp('Demo')
runApp('Demo')
shiny::runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
runApp('Demo')
